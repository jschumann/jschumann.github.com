---
layout: page
title: "Notes on Lean from the Trenches"
comments: true
sharing: true
footer: true
---
%h2 Part I — How We Work

%h3 1. About the Project
%h4 1.1 Timeline 
%h4 1.2 How We Sliced the Elephant 
%h4 1.3 How We Involved the Customer 

%h3 2. Structuring the Teams

%h3 3. Attending the Daily Cocktail Party
%h4 3.1 First Tier: Feature Team Daily Stand-up
%h4 3.2 Second Tier: Sync Meetings per Specialty 
%h4 3.3 Third Tier: Project Sync Meeting 

%h3 4. The Project Board
%h4 4.1 Our Cadences 
%h4 4.2 How We Handle Urgent Issues and Impediments 

%h3 5. Scaling the Kanban Boards

%h3 6. Tracking the High-Level Goal

%h3 7. Defining Ready and Done 
%h4 7.1 Ready for Development 
%h4 7.2 Ready for System Test 
%h4 7.3 How This Improved Collaboration 

%h3 8 Handling Tech Stories
%h4 8.1 Example 1: System Test Bottleneck 
%h4 8.2 Example 2: Day Before the Release 
%h4 8.3 Example 3: The 7-Meter Class 

%h3 9. Handling Bugs
%h4 9.1 Continuous System Test 
%h4 9.2 Fix the Bugs Immediately! 
%h4 9.3 Why We Limit the Number of Bugs in the Bug Tracker 
%h4 9.4 Visualizing Bugs 
%h4 9.5 Preventing Recurring Bugs 

%h3 10. Continuously Improving the Process
%h4 10.1 Team Retrospectives
%h4 10.2 Process Improvement Workshops
%h4 10.3 Managing the Rate of Change

%h3 11. Managing Work in Progress
%h4 11.1 Using WIP Limits 
%h4 11.2 Why WIP Limits Apply Only to Features 

%h3 12. Capturing and Using Process Metrics
%h4 12.1 Velocity (Features per Week)
%h4 12.2 Why We Don’t Use Story Points
%h4 12.3 Cycle Time (Weeks per Feature)
%h4 12.4 Cumulative Flow
%h4 12.5 Process Cycle Efficiency

%h3 13. Planning the Sprint and Release
%h4 13.1 Backlog Grooming 
%h4 13.2 Selecting the Top Ten Features 
%h4 13.3 Why We Moved Backlog Grooming Out of the Sprint Planning Meeting 
%h4 13.4 Planning the Release 

%h3 14. How We Do Version Control
%h4 14.1 No Junk on the Trunk 
%h4 14.2 Team Branches 
%h4 14.3 System Test Branch 

%h3 15. Why We Use Only Physical Kanban Boards 
 
%h3 16. What We Learned
%h4 16.1 Know Your Goal
%h4 16.2 Experiment
%h4 16.3 Embrace Failure
%h4 16.4 Solve Real Problems
%h4 16.5 Have Dedicated Change Agents
%h4 16.6 Involve People

%h2 Part II — A Closer Look at the Techniques

%h3 17. Agile and Lean in a Nutshell
%h4 17.1 Agile in a Nutshell
%h4 17.2 Lean in a Nutshell
%h4 17.3 Scrum in a Nutshell
%h4 17.4 XP in a Nutshell
%h4 17.5 Kanban in a Nutshell

%h3 18. Reducing the Test Automation Backlog
%h4 18.1 What to Do About It 
%h4 18.2 How to Improve Test Coverage a Little Bit Each Iteration 
%h4 18.3 Step 1: List Your Test Cases 
%h4 18.4 Step 2: Classify Each Test 
%h4 18.5 Step 3: Sort the List in Priority Order 
%h4 18.6 Step 4: Automate a Few Tests Each Iteration 
%h4 18.7 Does This Solve the Problem? 

%h3 19. Sizing the Backlog with Planning Poker
%h4 19.1 Estimating Without Planning Poker
%h4 19.2 Estimating with Planning Poker
%h4 19.3 Special Cards

%h3 20. Cause-Effect Diagrams
%h4 20.1 Solve Problems, Not Symptoms 
%h4 20.2 The Lean Problem-Solving Approach: A3 Thinking 
%h4 20.3 How to Use Cause-Effect Diagrams 
%h4 20.4 Example 1: Long Release Cycle 
%h4 20.5 Example 2: Defects Released to Production 
%h4 20.6 Example 3: Lack of Pair Programming 
%h4 20.7 Example 4: Lots of Problems 
%h4 20.8 Practical Issues: How to Create and Maintain the Diagrams
%h4 20.9 Pitfalls
%h4 20.10 Why Use Cause-Effect Diagrams?

%h3 21. Final Words

%h2 A1. Glossary: How We Avoid Buzzword Bingo

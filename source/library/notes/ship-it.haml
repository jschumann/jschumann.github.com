---
layout: page
title: "Notes on Ship It!"
comments: true
sharing: true
footer: true
---
1 Introduction
1.1 Habitual Excellence
1.2 A Pragmatic Point of View
1.3 Road Map
1.4 Moving On
1.5 How Should I Read This Book?

2 Tools and Infrastructure
1. Develop in a Sandbox 
2. Manage Assets 
3. Script Your Build 
4. Build Automatically 
5. Track Issues
6. Track Features
7. Use a Testing Harness
8. On Choosing Tools
9. When Not to Experiment

3 Pragmatic Project Techniques
10. Work from The List
11. A Tech Leads
12. Coordinate and Communicate Every Day
13. Review All Code
14. Send Code Change Notifications
15. Putting It All Together

4 Tracer Bullet Development

5 Common Problems and How to Fix Them
16. Help! I’ve Inherited Legacy Code
17. Testing Untestable Code 
18. Features Keep Breaking 
19. Tests? We Stopped Using Them 
20. But It Works for Me!
21. It Hurts When I Integrate Code
22. Can’t Build the Product Reliably
23. Customers Are Unhappy
24. You’ve Got a Rogue Developer
25. Your Manager Is Unhappy
26. Team Doesn’t Work Well Together
27. Can’t Get “Buy-in” on Essential Points
28. The New Practice Didn’t Help
29. There’s No Automated Testing
30. We’re Junior Developers, With No Mentor
31. We’re on a “Death March” Project 
32. Features Keep Creeping In 
33. We’re Never Done

Appendices

A Tip Summary
B Source Code Management
C Build Scripting Tools
D Continuous Integration Systems
E Issue Tracking Software
F Development Methodologies
G Testing Frameworks
H Suggested Reading List
